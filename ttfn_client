#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#include <netdb.h>
#include <time.h>

int main(int argc, char *argv[])
{
    int sock;
    struct sockaddr_in server;
    struct hostent *hp;
    int packsize = 1024;
    int header = 20;
    int repeat = 10;
    clock_t start, end;
    double cpu_time_used;
    
    char * buf;

    buf = (char*) malloc(packsize);
    if (buf == NULL) exit (1);
    
    memset(buf,'a',packsize-1);
    
    sock = socket(AF_INET, SOCK_STREAM, 0);
    if (sock < 0)
    {
        perror("socket failed");
        exit(1);
    }
    server.sin_family = AF_INET;
    hp = gethostbyname("localhost");
    if(hp == 0)
    {
        perror("gethostbyname failed");
        exit(1);
    }
    memcpy(&server.sin_addr, hp->h_addr, hp->h_length);
    server.sin_port = htons(5000);
    
    if(connect(sock, (struct sockaddr *) &server, sizeof(server)) < 0){
        perror("Connect failed");
        exit(1);
    }
    ssize_t n = 0;
    long double max = 0;
    long double min = 1000;
    long double sum = 0;
    
    for (int i = 0; i<repeat; i++){
        start = clock();
        if((n =send(sock, buf, packsize, 0)) < 0){
            perror("send failed");
            exit(1);
        }
        end = clock();
        cpu_time_used = ((double) (end - start)/CLOCKS_PER_SEC);
        printf("Sent %d bytes  time %Lf\n", (int)n, (long double)cpu_time_used);
        fflush(stdout);
        if (cpu_time_used > max) max = cpu_time_used;
        if (cpu_time_used < min) min = cpu_time_used;
        sum += cpu_time_used;
        sleep(1);
    }
    long double avg = sum / repeat;
    long total = n*repeat;
    printf("Total Bytes   Real s    Real-Bytes/s   Msgs Transferred  Packet-Size(bytes)\n");
    printf("%li  %Lf  %Lf  %d  %d\n", total, sum, (long double)total/sum, repeat, packsize);
    printf("max: %Lf\nmin: %Lf\navg: %Lf\n", min, max, avg);
    fflush(stdout);
    
    close(sock);
    return 0;
}
